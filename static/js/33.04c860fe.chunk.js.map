{"version":3,"file":"static/js/33.04c860fe.chunk.js","mappings":"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","sources":["API.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '183c3cacc9c38c09c14d38798ccfe9d7';\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const getMovies = async () => {\n  const response = await moviesApi.get('trending/all/day', {\n    params: { api_key: KEY },\n  });\n  return response.data;\n};\n\nexport const getMoviesById = async id => {\n  const response = await moviesApi.get(`movie/${id}`, {\n    params: { api_key: KEY },\n  });\n\n  return response;\n};\n\nexport const getCastById = async id => {\n  const response = await moviesApi.get(`movie/${id}/credits`, {\n    params: { api_key: KEY },\n  });\n\n  return response;\n};\n\nexport const getReviewsById = async id => {\n  const response = await moviesApi.get(`movie/${id}/reviews`, {\n    params: { api_key: KEY },\n  });\n\n  return response;\n};\n\nexport const getSearhedMovies = async query => {\n  const response = await moviesApi.get('search/movie', {\n    params: { api_key: KEY, query },\n  });\n  return response.data;\n};\n\n//https://api.themoviedb.org/3/search/movie?query=batman\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GoBack = styled(Link)`\n  display: block;\n  width: 100px;\n\n  border: 1px black solid;\n  border-radius: 4px;\n  text-align: center;\n  text-decoration: none;\n\n  margin-bottom: 10px;\n\n  &:hover {\n    background-color: #f20c96;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 16px;\n  padding: 10px;\n`;\n\nexport const Aditional = styled.div`\n  border-top: black solid 1px;\n  border-bottom: black solid 1px;\n  padding: 10px;\n`;\n","import { getMoviesById } from 'API';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams, Link } from 'react-router-dom';\nimport { Aditional, GoBack, MovieInfo } from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { Notify } from 'notiflix';\n\nconst MovieDetails = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const [currentMovie, setCurrentMovie] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getCurrentMovie = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getMoviesById(id);\n        if (response.data.length === null) {\n          return Notify.failure('Oops.. Simesing went wrong');\n        }\n        setCurrentMovie(response.data);\n      } catch (error) {\n        setError(true);\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCurrentMovie();\n  }, [id]);\n\n  const posterUrl = currentMovie?.poster_path\n    ? `https://image.tmdb.org/t/p/w200${currentMovie.poster_path}`\n    : 'https://placehold.it/200x300';\n\n  const userScore = currentMovie ? currentMovie.vote_average * 10 : null;\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {error && <p>Oops.. Simesing went wrong</p>}\n      <GoBack to={backLinkLocationRef.current}>‚Üê GO back</GoBack>\n      {currentMovie && (\n        <>\n          <MovieInfo>\n            <img src={posterUrl} alt=\"error\" />\n            <div>\n              <h2>{currentMovie.original_title}</h2>\n              <p>User Score: {userScore}%</p>\n              <h2>Overview</h2>\n              <p>{currentMovie.overview ?? 'There is no review'}</p>\n              <h2>Genres</h2>\n              <p>{currentMovie.genres.map(genre => genre.name).join(' ')}</p>\n            </div>\n          </MovieInfo>\n          <Aditional>\n            <h2>Aditional informations</h2>\n            <ul>\n              <li>\n                <Link to={'cast'}>cast</Link>\n              </li>\n              <li>\n                <Link to={'reviews'}>reviews</Link>\n              </li>\n            </ul>\n          </Aditional>\n        </>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","moviesApi","axios","baseURL","getMovies","get","params","api_key","response","data","getMoviesById","id","getCastById","getReviewsById","getSearhedMovies","query","GoBack","styled","Link","MovieInfo","Aditional","useState","isLoading","setIsLoading","error","setError","location","useLocation","backLinkLocationRef","useRef","state","from","currentMovie","setCurrentMovie","useParams","useEffect","getCurrentMovie","length","Notify","console","posterUrl","poster_path","userScore","vote_average","Loader","to","current","src","alt","original_title","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}